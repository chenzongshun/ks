<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ks.domain.mapper.RecordMapper">

    <resultMap id="BaseResultMap" type="com.ks.domain.entity.Record">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="pid" jdbcType="INTEGER" property="pid"/>
        <result column="qid" jdbcType="INTEGER" property="qid"/>
        <result column="sid" jdbcType="VARCHAR" property="sid"/>
    </resultMap>


    <sql id="Base_Column_List">
  id, pid, qid, sid
</sql>


    <delete id="delete" parameterType="java.lang.Integer">
  delete from record
  where id = #{id,jdbcType=INTEGER}
</delete>


    <insert id="insert" parameterType="com.ks.domain.entity.Record">
  insert into record (id, pid, qid,
    sid)
  values (#{id,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{qid,jdbcType=INTEGER},
    #{sid,jdbcType=VARCHAR})
</insert>


    <insert id="insertDynamic" parameterType="com.ks.domain.entity.Record">
        insert into record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="pid != null">
                pid,
            </if>
            <if test="qid != null">
                qid,
            </if>
            <if test="sid != null">
                sid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=INTEGER},
            </if>
            <if test="qid != null">
                #{qid,jdbcType=INTEGER},
            </if>
            <if test="sid != null">
                #{sid,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>


    <update id="updateDynamic" parameterType="com.ks.domain.entity.Record">
        update record
        <set>
            <if test="pid != null">
                pid = #{pid,jdbcType=INTEGER},
            </if>
            <if test="qid != null">
                qid = #{qid,jdbcType=INTEGER},
            </if>
            <if test="sid != null">
                sid = #{sid,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>


    <update id="update" parameterType="com.ks.domain.entity.Record">
  update record
  set pid = #{pid,jdbcType=INTEGER},
    qid = #{qid,jdbcType=INTEGER},
    sid = #{sid,jdbcType=VARCHAR}
  where id = #{id,jdbcType=INTEGER}
</update>


    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from record
        where id = #{id,jdbcType=INTEGER}
    </select>


    <sql id="findPageWithWhere">
        <where>1=1
            <if test="id != null">
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="pid != null">
                and pid = #{pid,jdbcType=INTEGER}
            </if>
            <if test="qid != null">
                and qid = #{qid,jdbcType=INTEGER}
            </if>
            <if test="sid != null and sid != ''">
                and sid = #{sid,jdbcType=VARCHAR}
            </if>
        </where>
    </sql>


    <select id="findPageWithResult" parameterType="com.ks.domain.dto.RecordDTO" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from record
        <include refid="findPageWithWhere"/>
        limit #{start},#{pageSize}
    </select>


    <select id="findPageWithCount" parameterType="com.ks.domain.dto.RecordDTO" resultType="Integer">
        select count(1)
        from record
        <include refid="findPageWithWhere"/>
    </select>

</mapper>